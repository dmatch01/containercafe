---

- name: Install Flannel binary
  copy:
    dest: /opt/bin/
    src: "{{ lookup('env','HOME') }}/tmp/flannel-{{flannel_version}}/flanneld"
    mode: a+x

- name: Ensure /etc/default/flanneld
  template:
    src: defaults-flanneld.j2
    dest: /etc/default/flanneld

- name: Ensure flanneld upstart service is configured
  copy:
    dest: /etc/init/
    src: "{{ lookup('env','HOME') }}/tmp/flanneld.conf"

- name: Ensure the flanneld service is running now and after reboots
  service:
    name: flanneld
    enabled: yes
    state: started

- name: Wait for flanneld to define local props
  wait_for:
    path: /run/flannel/subnet.env

- name: Ensure /etc/default/docker uses flannel configuration
  lineinfile:
    dest: /etc/default/docker
    regexp: ^DOCKER_OPTS="\$DOCKER_OPTS --bip
    insertafter: EOF
    line: DOCKER_OPTS="$DOCKER_OPTS --bip=${FLANNEL_SUBNET} --mtu=${FLANNEL_MTU}"

- name: Ensure /etc/default/docker reads flannel configuration
  lineinfile:
    dest: /etc/default/docker
    insertbefore: ^DOCKER_OPTS="\$DOCKER_OPTS --bip
    line: . /run/flannel/subnet.env

- name: Test whether Docker upstart service depends on flanneld
  command: grep "start on (flanneld and" /etc/init/docker.conf
  register: greprslt
  ignore_errors: True
  changed_when: False

- name: Make Docker upstart service depend on flanneld
  command: sed -i.bak "s/start on (/start on (flanneld and /" /etc/init/docker.conf
  when: not greprslt|success

- name: find flannel subnet
  shell: ". /run/flannel/subnet.env && echo inet $FLANNEL_SUBNET"
  register: flanet
  changed_when: False

- name: test whether the Docker bridge is configured for Flannel
  shell: "ip addr show dev docker0 | fgrep '{{ flanet.stdout_lines[0] }} '"
  register: addrslt
  changed_when: False
  ignore_errors: True

- name: restart Docker if its bridge is not configured correctly
  service:
    name: docker
    state: restarted
  when: not addrslt|success
